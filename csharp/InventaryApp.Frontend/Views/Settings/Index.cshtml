@*SETTINGS INDEX*@

@using InventaryApp.Utilities.Models;
@model Dictionary<string, object>

@{
    ViewBag.Title = language.GetKey("Settings");
    var indexRow = 0;
}

@inject LanguageService language
<div class="p-3">
    <div class="bg-gradient-gray-dark rounded shadow p-3 text-capitalize text-center mb-3">
        @language.GetKey("Settings")
    </div>

    <div class="rounded shadow p-3 bg-white">
        <div id="SettingsCardsWebApi">
            <div class="row">
                <div class="col-12">
                    <div class="card card-dark">
                        <a class="d-block w-100" data-toggle="collapse" href="#collapseSettingsWebApi">
                            <div class="card-header dark-mode">
                                <h3 class="card-title">Configuración Web Api</h3>
                                <div class="card-tools">
                                    <span>
                                        <input type="button" class="btn btn-tool" data-card-widget="collapse" title="Collapse">
                                        <i class="fas fa-minus"></i>
                                    </span>
                                </div>
                            </div>
                        </a>
                        <div id="collapseSettingsWebApi" class="collapse show" data-parent="#SettingsCardsWebApi">
                            <div class="card-body">
                                <div class="text-right mb-3">
                                    <a class="btn btn-dark pl-5 pr-5" data-toggle="modal" data-target="#SettingsWebApi" data-action="insert">
                                        <i class="fas fa-plus" title="@language.GetKey("AddRecord")" data-placement="top" data-toggle="tooltip"></i>
                                    </a>
                                </div>
                                <table id="SettingsData" class="table table-bordered table-hover" data-item="Table">
                                    <thead class="text-center dark-mode">
                                        <tr>
                                            <th scope="row">#</th>
                                            <th scope="row">@language.GetKey("Key")</th>
                                            <th scope="row">@language.GetKey("Value")</th>
                                            <th scope="row">@language.GetKey("Options")</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var Row in Model)
                                        {
                                            indexRow = indexRow == 0 ? 1 : indexRow + 1;
                                            <tr>
                                                <td scope="row">@indexRow</td>
                                                <td name="@Row.Key" id="key_@Row.Key">@Row.Key</td>
                                                <td name="@Row.Key" id="value_@Row.Key">@Row.Value</td>
                                                <td class="text-center">
                                                    <a href="#" class="mr-2" data-toggle="modal" data-target="#SettingsWebApi" data-action="update" data-id="@Row.Key">
                                                        <i class="fas fa-edit" data-toggle="tooltip" data-placement="top" title="@language.GetKey("EditRecord")"></i>
                                                    </a>
                                                    <a href="#" onclick="DeleteRecord(`@Row.Key`)">
                                                        <i class="fas fa-trash" data-toggle="tooltip" data-placement="top" title="@language.GetKey("DeleteRecord")"></i>
                                                    </a>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            @*Modal Role*@
            <div class="modal fade" id="SettingsWebApi" data-backdrop="static" tabindex="-1" aria-labelledby="ModalLabelTitle" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">
                    <div class="modal-content">
                        <div class="modal-header dark-mode">
                            <h5 class="modal-title text-center" id="ModalLabelTitle"></h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            <form method="post" id="SettingsWebApiModalData" onsubmit="return false;">
                                <div class="form-group">
                                    <label for="settings-key">@language.GetKey("Key")</label>
                                    <span data-toggle="tooltip" data-placement="right" title="Nombre de la llave *Requerido">
                                        <i class="fas fa-info-circle"></i>
                                    </span>
                                    <input type="text" class="form-control" id="settings-key" name="key" required>
                                </div>
                                <div class="form-group">
                                    <label for="settings-value">@language.GetKey("Value")</label>
                                    <span data-toggle="tooltip" data-placement="right" title="Valor de la llave *Requerido">
                                        <i class="fas fa-info-circle"></i>
                                    </span>
                                    <input type="text" class="form-control" id="settings-value" name="value" required>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-outline-secondary" data-dismiss="modal">
                                        <i class="fas fa-times mr-2"></i>
                                        @language.GetKey("Close")
                                    </button>
                                    <button type="submit" onclick="SendSettingWebApi(SettingsWebApiModalData)" class="btn btn-dark">
                                        <i class="fas fa-save mr-2"></i>
                                        @language.GetKey("Save")
                                    </button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section ScriptsAfter{
    <script type="text/javascript">
        var actionExecution;

        $(function () {
            $("#SettingsWebApiModalData").validate({
                rules: {
                    key: {
                        required: true,
                    },
                    value: {
                        required: true
                    }
                },
                messages: {
                    key: {
                        required: "Debe ingresar una llave valida",
                    },
                    value: {
                        required: "Debe ingresar un valor valido",
                    }
                },
                highlight: function (element) {
                    $(element).removeClass('is-valid').addClass('is-invalid');
                },
                unhighlight: function (element) {
                    $(element).removeClass('is-invalid').addClass('is-valid');
                },
            });
        });

        $('#SettingsWebApi').on('show.bs.modal', function (event) {
            var button = $(event.relatedTarget); //Botón desde donde fue presionado
            var action = button.data('action');
            actionExecution = action;
            var modal = $(this);
            $(".error").hide();

            let message;
            switch (action) {
                case "update":
                    message = 'Editar Registro';
                    let dataId = button.data('id');
                    modal.find("#settings-key").val($("#key_" + dataId).text()).removeClass("is-valid is-invalid").attr("disabled", "true").attr("readonly", "true");
                    modal.find("#settings-value").val($("#value_" + dataId).text()).removeClass("is-valid is-invalid");
                    break;
                default:
                    //default action by insert
                    message = 'Añadir Nuevo Registro';
                    modal.find("#settings-key").val("").removeClass("is-valid is-invalid").removeAttr("disabled").removeAttr("readonly");
                    modal.find("#settings-value").val("").removeClass("is-valid is-invalid");
                    break;
            }
            modal.find('.modal-title').text(message)
        })

        function SendSettingWebApi(dataIn) {
            var data = $(dataIn);
            var Model = {};
            let key_str;

            if ($(data).valid()) {
                switch (actionExecution) {
                    case "update":
                        key_str = data.children().find("[id=settings-key]").val();
                        Model[data.children().find("[id=settings-key]").val()] = data.children().find("[id=settings-value]").val();
                        $.ajax({
                            url: `@Url.Action("Put_WebApi", "Settings")?Settings=${JSON.stringify(Model)}`,
                            type: 'POST',
                            async: false
                        }).done(function (response) {
                            $(".modal").modal("hide");
                            swalCustom.fire({
                                title: "Registro Actualizado",
                                text: `Se ha actualizado el registro ${key_str} correctamente.`,
                                icon: "success",
                                confirmButtonText: 'Ok',
                            }).then(() => {
                                window.location.reload();
                            });
                        }).fail(function (response) {
                            swalCustom.fire({
                                title: "Actualización Fallida",
                                text: `Se ha presentado un error en el registro ${key_str}.`,
                                icon: "error"
                            });
                        });
                        break;
                    default:
                        key_str = data.children().find("[id=settings-key]").val();
                        Model[data.children().find("[id=settings-key]").val()] = data.children().find("[id=settings-value]").val();
                        $.ajax({
                            url: `@Url.Action("Post_WebApi", "Settings")?Settings=${JSON.stringify(Model)}`,
                            type: 'POST',
                            async: false
                        }).done(function (response) {
                            $(".modal").modal("hide");
                            swalCustom.fire({
                                title: "Registro Exitoso",
                                text: "Se ha registrado correctamente el valor " + key_str,
                                icon: "success",
                                confirmButtonText: 'OK',
                            }).then(() => {
                                window.location.reload();
                            });
                        }).fail(function (response) {
                            swalCustom.fire({
                                title: "Registro Fallido",
                                text: "Se ha presentado un error registrando el valor " + key_str,
                                icon: "error"
                            });
                        });
                        break;
                }
            }
        }

        function DeleteRecord(record_guid) {
            swalCustom.fire({
                title: '¿Eliminar Registro?',
                text: "Este cambio no se puede revertir",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Confirmar',
                cancelButtonText: 'Cancelar',
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: `@Url.Action("Delete_WebApi", "Settings")?key=${record_guid}`,
                            type: 'POST',
                            async: false
                    }).done(function (response) {
                        swalCustom.fire({
                            text: 'Registro Eliminado Correctamente.',
                            icon: 'success',
                            confirmButtonText: 'OK'
                        }).then(() => {
                            window.location.reload();
                        });
                    }).fail(function () {
                        swalCustom.fire({
                            text: 'Registro No pudo ser eliminado.',
                            icon: 'error',
                            confirmButtonText: 'OK'
                        });
                    });

                }
            })
        }
    </script>
}